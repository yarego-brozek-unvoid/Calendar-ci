name: Deploy PR previews

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency: preview-${{ github.ref }}

jobs:
  deploy-preview:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and Build
        run: |
          npm install
          npm run build

      - name: Deploy PR Preview
        runs:
          author: Ross Williams
          description: >
            Deploy a pull request preview to GitHub Pages, similar to Vercel and
            Netlify.
          branding:
            icon: git-pull-request
            color: yellow

          inputs:
            preview-branch:
              description: Branch on which the previews will be deployed.
              required: false
              default: gh-pages
            umbrella-dir:
              description: Name of the directory containing all previews.
              required: false
              default: pr-preview
            source-dir:
              description: Directory containing files to deploy.
              required: false
              default: ./dist/gh-pages
            custom-url:
              description: Custom pages URL
              required: false
              default: ""
            action:
              description: >
                Determines what this action will do when it is executed. Supported
                values: `deploy`, `remove`, `auto` (default).
                If set to `deploy`, will attempt to deploy the preview and overwrite
                any existing preview in that location.
                If set to `remove`, will attempt to remove the preview in that
                location.
                If set to `auto`, the action will try to determine whether to deploy
                or remove the preview. It will deploy the preview on
                `pull_request.types.synchronize` and `.opened` events, and remove it
                on `pull_request.types.closed` events. It will not do anything for
                all other events. `auto` is the default value.
              required: false
              default: auto

          outputs:
            deployment-url:
              description: The URL at which the preview has been deployed
              value: ${{ steps.url.outputs.url }}

          runs:
            using: composite
            steps:
              - name: Store environment variables
                env:
                  action: ${{ inputs.action }}
                  umbrella: ${{ inputs.umbrella-dir }}
                  pr: ${{ github.event.number }}
                  actionref: ${{ github.action_ref }}
                  actionrepo: ${{ github.action_repository }}
                  customurl: ${{ inputs.custom-url }}
                run: |
                  echo "action=$action" >> $GITHUB_ENV
                  echo "targetdir=$umbrella/pr-$pr" >> $GITHUB_ENV
                  echo "pr=$pr" >> $GITHUB_ENV
                  org=$(echo "$GITHUB_REPOSITORY" | cut -d "/" -f 1)
                  thirdleveldomain=$(echo "$GITHUB_REPOSITORY" | cut -d "/" -f 2 | cut -d "." -f 1)
                  if [ ! -z "$customurl" ]; then
                    pagesurl="$customurl"
                  elif [ "$org" == "$thirdleveldomain" ]; then
                    pagesurl="${org}.github.io"
                  else
                    pagesurl=$(echo "$GITHUB_REPOSITORY" | sed 's/\//.github.io\//')
                  fi
                  echo "pagesurl=$pagesurl" >> $GITHUB_ENV
                  echo "emptydir=$(mktemp -d)" >> $GITHUB_ENV
                  echo "datetime=$(date '+%Y-%m-%d %H:%M %Z')" >> $GITHUB_ENV
                  echo "actionref=$actionref" >> $GITHUB_ENV
                  echo "actionrepo=$actionrepo" >> $GITHUB_ENV
                shell: bash

              - name: Determine action version
                run: >-
                  ${{ github.action_path }}/lib/find-current-git-tag.sh
                  -p $actionrepo -f $actionref
                shell: bash

              - name: Determine auto action
                if: env.action == 'auto'
                run: ${{ github.action_path }}/lib/determine-auto-action.sh
                shell: bash

              - name: Deploy preview directory
                if: env.action == 'deploy'
                uses: JamesIves/github-pages-deploy-action@v4
                with:
                  branch: ${{ inputs.preview-branch }}
                  folder: ${{ inputs.source-dir }}
                  target-folder: ${{ env.targetdir }}
                  commit-message: Deploy preview for PR ${{ env.pr }} ðŸ›«
                  force: false

              - name: Expose deployment URL
                id: url
                run: echo "::set-output name=url::https://${{ env.pagesurl }}/${{ env.targetdir }}/"
                shell: bash

              - name: Leave a comment after deployment
                if: env.action == 'deploy' && env.deployment_status == 'success'
                uses: marocchino/sticky-pull-request-comment@v2
                with:
                  header: pr-preview
                  message: "\
                    [PR Preview Action]\
                    (${{ github.server_url }}/${{ env.actionrepo }})
                    ${{ env.action_version }}
                    :---:
                    :rocket: Deployed preview to
                    https://${{ env.pagesurl }}/${{ env.targetdir }}/
                    on branch [`${{ inputs.preview-branch }}`](\
                    ${{ github.server_url }}/${{ github.repository }}\
                    /tree/${{ inputs.preview-branch }})
                    at ${{ env.datetime }}
                    "

              - name: Remove preview directory
                if: env.action == 'remove'
                uses: JamesIves/github-pages-deploy-action@v4
                with:
                  branch: ${{ inputs.preview-branch }}
                  folder: ${{ env.emptydir }}
                  target-folder: ${{ env.targetdir }}
                  commit-message: Remove preview for PR ${{ env.pr }} ðŸ›¬
                  force: false

              - name: Leave a comment after removal
                if: env.action == 'remove' && env.deployment_status == 'success'
                uses: marocchino/sticky-pull-request-comment@v2
                with:
                  header: pr-preview
                  message: "\
                    [PR Preview Action]\
                    (${{ github.server_url }}/${{ env.actionrepo }})
                    ${{ env.action_version }}
                    :---:
                    Preview removed because the pull request was closed.
                    ${{ env.datetime }}
                    "
